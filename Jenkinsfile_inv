pipeline {
    agent any
    environment {
        JENKINS_ID = sh(returnStdout: true, script: 'id jenkins -u').trim()
        JENKINS_GID = sh(returnStdout: true, script: 'id jenkins -g').trim()
        TERRAFORM_VM_COUNT = 4
        TERRAFORM_VM_IP_BASE = "192.168.1.4"
        KUBESPRAY_VERSION = 'v2.15.0'
    }
    stages {
        stage('Gerando_Imagem_Kubespray') {
            steps {
                dir("${env.WORKSPACE}/kubespray") {
                    sh '[ -d .git ] || git init'
                    sh 'git config http.sslVerify false'
                    checkout([  $class: "GitSCM",
                            branches: [[name: "refs/tags/${KUBESPRAY_VERSION}"]],
                            extensions: [[$class: "CloneOption", shallow: false, depth: 0, reference: ""]],
                            userRemoteConfigs: [[url: "https://github.com/kubespray/kubespray.git"]]
                            ])
                    sh 'sed -e "/ENV LANG=C.UTF-8/d" -e "/^FROM/a ENV LANG=C.UTF-8" -i Dockerfile'
                    sh 'docker build -t ks .'
                }
            }
        }
        stage('Preparando_VMs') {
            agent {
                docker { 
                    image 'ks'
                    args '-i --privileged -u 0:0 --network host --entrypoint='
                }
            } 
            steps {
                dir("${env.WORKSPACE}/kubernetes") {
                    sh '''
                    for i in $(seq ${TERRAFORM_VM_COUNT} -1 1) ; do
                      echo $i
                      sed -e "1s/^/k8s-worker${i} ansible_ssh_host=${TERRAFORM_VM_IP_BASE}${i} ip=${TERRAFORM_VM_IP_BASE}${i}\\n/" -e "/^.kube-node.$/a k8s-worker${i}" -i inventory.ini
                    done
                    sed -e "1s/^/k8s-master1 ansible_ssh_host=${TERRAFORM_VM_IP_BASE}0 ip=${TERRAFORM_VM_IP_BASE}0\\n/" -i inventory.ini
                    cat inventory.ini
                    '''
                }
            }
        }
    }
}
